#-*-shell-script-*-
# vim: ft=zsh
stty -ixon
bindkey -e # emacs key bindings
source ~/.dotfiles/zsh/plugins.zsh
export PATH=~/.local/bin:$PATH

export RSYNC_RSH='ssh'
export EDITOR=nvim
export VISUAL=nvim
export PAGER='less'
export LESS='--quit-if-one-screen -R -iMX -x4'
export LESSOPEN="|~/.dotfiles/lessfilter %s"
export WORDCHARS="*?_-.[]~&;=!#$%^(){}<>"

[ -S ${XDG_RUNTIME_DIR}/podman/podman.sock ] \
  && export DOCKER_HOST="unix://${XDG_RUNTIME_DIR}/podman/podman.sock"

HISTSIZE=5100
export HISTFILE=~/.zsh_history
export SAVEHIST=5000
export DIRSTACKSIZE=15
export fignore=('~' .bak)
hash -d 'D=/usr/share/doc'

setopt   notify globdots correct cdablevars auto_menu auto_list
setopt   correctall noautocd recexact longlistjobs sharehistory
setopt   autoresume extendedglob rcquotes hashcmds
setopt   globcomplete ignore_eof rmstarsilent histallowclobber
setopt   auto_pushd pushdminus print_eight_bit
setopt   magic_equal_subst transient_rprompt
unsetopt bgnice listbeep recexact listambiguous

bindkey ' ' magic-space  # also do history expansino on space
bindkey "\e[Z" reverse-menu-complete

autoload -Uz up-line-or-beginning-search
autoload -Uz down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^P" up-line-or-beginning-search
bindkey "^N" down-line-or-beginning-search

autoload -Uz edit-command-line
zle -N edit-command-line
bindkey '\ee' edit-command-line
precmd() {
  [ -n "$TMUX_PANE" ] && tmux rename-window $(basename $PWD)
  jobs;
}

autoload -Uz vcs_info

bindkey '^[;' autosuggest-execute
# accept auto completion
function accept_and_pager() {
  BUFFER="${BUFFER}| ${PAGER}"
  zle accept-line
}
zle -N accept_and_pager
bindkey '^[p' accept_and_pager
function auto_quote() {
  if [ "$#LBUFFER" -eq 0 ]; then
    zle quote-line
  elif [ "${BUFFER:$#BUFFER-1}" = " " ]; then
    RBUFFER="\"\""
    zle forward-char
  else
    zle backward-word
    RBUFFER="\"${RBUFFER}\""
    zle end-of-line
  fi
}
zle -N auto_quote
bindkey '^[7' auto_quote

function fzfrg() {
  local B=$(
    rg --color=always --line-number --no-heading --smart-case "${*:-}" |
    fzf --delimiter : \
        --preview 'bat --color=always {1} --highlight-line {2}' \
        --bind 'ctrl-e:become($EDITOR {1} +{2})'
  )
  RBUFFER=$(echo $B | cut -d: -f1)
}
zle -N fzfrg
bindkey '^[s' fzfrg

function fzffd() {
  if [ "$#LBUFFER" -eq 0 ]; then
    BUFFER="${BUFFER}$( fd -I . | fzf )"
  elif [ "${BUFFER:$#BUFFER-1}" = " " ]; then
    BUFFER="${BUFFER}$( fd -I . | fzf )"
  else
    zle backward-word
    local DIR="" Q=${RBUFFER}
    if [ "${LBUFFER:$#LBUFFER-1}" = "/" ]; then
      zle backward-delete-char
      RBUFFER=""
      zle vi-backward-blank-word
      DIR=${RBUFFER}
    fi
    # echo DIR:$DIR Q:$Q > ./tmp.txt
    RBUFFER="$( fd -I . ${DIR} | fzf -q ${Q} )"
  fi
  zle end-of-line
}
zle -N fzffd
bindkey '^[r' fzffd

function pastebuf() {
  TARGET=$(pbpaste | tr -d '\r\n')
  BUFFER="${BUFFER}${TARGET}"
}
zle -N pastebuf
bindkey '^[i' pastebuf
bindkey '^[B' vi-backward-blank-word

bindkey '^[k' history-substring-search-up
bindkey '^[j' history-substring-search-down

zstyle ':completion:*' use-cache true
# zstyle ':completion:*' matcher-list 'r:|?=**'
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' file-sort name
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' ignore-parents parent
# zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' completer _expand_alias _complete _ignored
zstyle ':completion:*' max-errors 4
zstyle ':completion:*' menu select=0
zstyle ':completion:*' prompt 'correct'
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' substitute 1
zstyle ':completion:*' verbose true
zstyle :compinstall filename "$HOME/.zshrc"

source ~/.dotfiles/zsh/alias.zsh

if [ -f ~/.zshrc.local ]; then
  source ~/.zshrc.local
fi
